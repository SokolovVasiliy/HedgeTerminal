

//---------------------------------------------------------------------------------------------------------------------------
// Классы-события.
/// Абстрактный базовый класс события, содержащий основные определения.
class Event;
/// Событие "Видимость визуального элемента изменена".
class EventVisible;
/// Событие "Размер визуального элемента изменен".
class EventResize;
/// Событие "Положение визуального элемента изменено".
class EventMove;
/// Событие "Пришел новый тик".
class EventNewTick;
/// Событие "Выполняется инициализация".
class EventInit;
/// Событие "Выполняется деинициализация".
class EventDeinit;
/// Событие "Команда на изменение видимости, положения и размера визуального элемента".
class EventNodeCommand;
/// Событие "Создана новая позиция".
class EventCreatePos;
/// Событие "Окно панели требуется обновить".
class EventRefresh;
/// Событие "Кнопка нажата/отжата".
class EventButtonPush;
/// Событие "Позиция удалена".
class EventDelPos;
/// Событие "Элемент TreeViewBox раскрыт/закрыт".
class EventCollapseTree;
/// Событие "Приход нового времени".
class EventTimer;
//---------------------------------------------------------------------------------------------------------------------------
// Классы визуальных элементов.

/// Базовый класс любого визуального элемента.
class ProtoNode;
/// Класс, группирующий элементы по определенным алгоритмам.
class Line;
/// Абстрактный базовый класс, поддерживающий ввод и отображение текста.
class TextNode;
/// Визуальный элемент "Таблица".
class Table;
/// Класс основывается на классе таблицы и содержит более специлизированное
/// представление таблицы открытых позиций.
class TableOpenPos;
/// Визуальный элемент "Кнопка".
class Button;
/// Визуальный элемент "CheckBox".
class CheckBox;
/// Визуальный элемент "TreeViewBox".
class TreeViewBox;
/// Класс "Вкладки"
class Tab;
/// Класс "Основная форма".
class MainForm;
/// Класс "Прокрутка списка".
class Scroll;


//------------------------------------------------------------------------------------------------------------------------------------
// Перечислители и константы
///
/// Идентификатор окна графика на котором запущена панель.
///
#define MAIN_WINDOW 0
///
/// Идентификатор подокна графика, на котором запущена панель.
///
#define MAIN_SUBWINDOW 0

///
/// Контекст передваемых координат для функции Move().
///
enum ENUM_COOR_CONTEXT
{
   ///
   /// Текущие координаты задаются относительно левого верхнего угла окна терминала.
   ///
   COOR_GLOBAL,
   ///
   /// Текущие координаты задаются относительно левого верхнего угла родительского узла.
   ///
   COOR_LOCAL
};

///
/// Идентификатор указывающий, что не нажата ни одна из кнопок мыши.
///
#define MOUSE_NOTHING_PUSH 0
///
/// Идентификатор указывающий, что нажата правая кнопка мыши.
///
#define MOUSE_RIGT_BUTTON_PUSH 1
///
/// Идентификатор указывающий, что нажата левая кнопка мыши.
///
#define MOUSE_LEFT_BUTTON_PUSH 2
///
/// Идентификатор указывающий, что нажата средняя кнопка мыши.
///
#define MOUSE_CENTER_BUTTON_PUSH 16

//-------------------------------------------------------------------------------------------------------
//
#include "Time.mqh"
#include "Log.mqh"
#include "API\API.mqh"
#include "Events.mqh"
#include "Elements\Node.mqh"
#include "Elements\Elements.mqh"


/// Включение класса ProtoNode.


//#include "position.mqh"
